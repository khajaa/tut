#navi(Python)
**Django - Static Media Files
#contents
***Simply Create a tag
settings.py
 INSTALL_APPS = {
   ...
   'MyProject.myapp.templatetags'
   ...

and add your own parameter
 STATIC_URL = 'http://static.myproject.com'

in Application folder (myapp)
 MyProject/
       myapp/
            templatetags/
                  __init__.py
                  custom_tags.py

custom_tags.py
 from django.conf import settings
 from django.template import Library
 
 register = Library()
 
 @register.simple_tag
 def get_static_url():
     return str(settings.STATIC_URL)

Usage in template
 {% load custom_tags %}
 ...
 <link rel="stylesheet" href="{% get_static_url %}/css/default.css"/>


***Static File Strategy with RequestContext
For development
urls.py
 (r'^(?P<path>(static)/.*)', 'django.views.static.serve', {'document_root': '.'}),

For Production

settings.py
 TEMPLATE_CONTEXT_PROCESSORS = (
        "django.core.context_processors.auth",
        #"django.core.context_processors.debug",
        "django.core.context_processors.i18n",
        "django.core.context_processors.media"
 )

and you just switch this parameter in production
 MEDIA_URL = '' 
to
 MEDIA_URL = 'http://media.xxki.com'

views.py
 from django.template import RequestContext

... in method
 return render_to_response('index.html',{'hello':'world'},context_instance=RequestContext(request));


template
 <img src="{{MEDIA_URL}}/static/images/rss.png" />


***Reference
http://mccormac.org/blog/2007/apr/04/dynamically-serving-static-content-django/

#navi(Python)

