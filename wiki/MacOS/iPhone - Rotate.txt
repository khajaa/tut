#navi(MacOS)
**iPhone - Rotate
#contents

***Detect Orientation - Customize
 - (void)viewDidLoad {
	//...
	[[UIDevice currentDevice] beginGeneratingDeviceOrientationNotifications];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(orientationChanged:)
 												 name:UIDeviceOrientationDidChangeNotification object:nil];
 }
 
 - (void)orientationChanged:(NSNotification *)notification{
    // We must add a delay here, otherwise we'll swap in the new view
    // too quickly and we'll get an animation glitch
    //[self performSelector:@selector(updateLandscapeView) withObject:nil afterDelay:0];
	if (UIDeviceOrientationIsLandscape([UIDevice currentDevice].orientation)){		
	//UIDeviceOrientation deviceOrientation = [UIDevice currentDevice].orientation;
 	// if (deviceOrientation == UIDevice... do something here
 }

***Rotation fix in code
turn on this in each controller
 - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
	return YES;
 }

 - (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation{
	UIInterfaceOrientation toOrientation= self.interfaceOrientation; 
	// portrait
	if (toOrientation== UIInterfaceOrientationPortrait || toOrientation== UIInterfaceOrientationPortraitUpsideDown)   {	
		//
	}
	// landscape
	else {
		//
	}
 }

***Initial Orientation

in info.plist

 Initial interface orientation

Start type in and use auto-complete

 Portrait (top home button) 
 Portrait (bottom home button)
 Landscape (left home button)
 Landscape (right home button)

#navi(MacOS)

